{"name":"Boardgamemaker","tagline":"Board Game Maker made with Kivy Framework","body":"License: LGPL\r\nFontIcon made with Fontello\r\nSoftware requirement:\r\n- Kivy 1.9 (kivy.org) Kivy 1.9 minimum,\r\n- Reportlab (pip installable in kivy environnement)\r\n- Pillow (pip installable in kivy environnement)\r\n\r\nPrior to launch, edit file bgm.ini and change the gamepath folder to an existing folder containings your pictures & projects.\r\nIf you don't, the software will ask you to do so & to restart it.\r\n\r\nSome Context\r\n------------\r\n\r\nI've been building a card/tiles making software for some time now. Before releasing it, I'd like to see whether there is a need for it and what kind of features it should have.\r\n\r\nThe Main screen, where pictures can be added, with different quantity & dual printing option to a stack of pictures.\r\n![Main Screen](https://raw.githubusercontent.com/opqopq/BoardGameMaker/master/img/main_screen.png)\r\n\r\nSo far, the program I have made (python langage based) have the following features:\r\n\r\n1) Dual Printing PDF Generator\r\n\r\nCreate ready to print Card/Tiles sheets, placing images on a sheet in order to ease dual printing of image\r\n\r\nThis feature is the most important one. It allows to simply create a deck of card or tiles from existing images, saving this deck in CSV/Excel format.\r\nYou can simply change their quantity and format them to the same size, creating dual printing pages if asked.\r\n\r\nThis is the \"raison d'Ãªtre\" of the software. At the time, I wanted to be able to easily print some card proxy for my Collectible Card Game sessions.\r\n\r\nThis feature is working, through PDF Export (only A4 format for now)\r\n\r\nExample of PDF with dual printing ready:\r\n![Example Output](https://raw.githubusercontent.com/opqopq/BoardGameMaker/master/img/output_pdf.png)\r\n\r\n2) Template Library\r\n\r\nSoftware comes with a bunch of template to transform your image before creating printing sheet.\r\nThink what some inkscape scripts would do.\r\nSome examples of implemented features:\r\n- add a custom border to an image\r\n- divide the image in several sub-ones (especially useful to split a board into several card-sized pictures)\r\n- transforming an image to an origami-dice shaped one\r\n- creating D6, D8 or D12, with custom face\r\n\r\nThis features works and a template library is available.\r\n\r\nExample of Dice Template :\r\n![Example of Dice Template](https://raw.githubusercontent.com/opqopq/BoardGameMaker/master/img/dice_template.png)\r\n\r\n3) Scripts for Deck Generation\r\n\r\nThink what nandeck would do here. Software can understand script in order to directly add card.\r\nSome example of implemented script:\r\n- duplicate an existing deck to add greyscale dual copy of each card\r\n- split an image & create a stack made of each of its sub images\r\n\r\nThis features is super-alpha. There will be lots of changes as the simplify the way scripts are working.\r\n\r\n4) Creating your own High Level Template\r\n\r\nOnce you have mastered the basic usages, you can launch the template designer, which is a WYSIWIG interface to create template, like the one existing in Magic Set Editor software.\r\nContrary to magic set software, template are created from the GUI.\r\nWith such template, you can create a simple excel/CSV file holding the data from your deck. The software will create the image for you.\r\nThink cardmaker software, here.\r\n\r\nThis feature cames with me playing with the Magic Set Editor Software.\r\nI wanted to do the same things, without being obliged to re-learn the text-based template system.\r\n\r\nThis feature heavily rely on the KIVY (kivy.org) templating language.\r\nAs a bonus, it means we have a fully scriptable templating language to define template.\r\n\r\nThis features is in beta state. The templating languge works, and the designer above spits its results as templating language.\r\nNevertheless, tons of documentation is missing.\r\n\r\nThe designer main screen:\r\n![designer](https://raw.githubusercontent.com/opqopq/BoardGameMaker/master/img/designer_screen.png)\r\n\r\n5) Even more power users features\r\n\r\nTemplate languages comes with some additionals features (like style) that I still have to mature. \r\nI do not know if usage will be interesting.\r\n\r\n--------------------------------------------------------------------\r\n\r\nThis is a lot to read. The program is ready, but in alpha quality.\r\n\r\nFeedback are happily welcome !","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}