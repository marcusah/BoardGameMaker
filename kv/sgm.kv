#:kivy 1.0.4
#:import CARD conf.card_format
#:import GAMEPATH conf.gamepath
#:import split os.path.split
#:import WatchedFolderTree utils.watched_directory.WatchedFolderTree
#:import StickyButton utils.stickybutton.StickyButton

<Icon@ToggleButtonBehavior+BoxLayout>:
    source: ""
    text: ""
    orientation: 'vertical'
    size_hint_y: None
    height: 80
    Image:
        source: root.source
        size_hint_y: .9
    Label:
        text: root.text
        size_hint_y: .1

<DynamicQuantity>:
    orientation: 'vertical'
    #size_hint: None, None
    #size: 100,100
    size_hint: None, None
    width: 100
    height: 150
    init_qt: 1
    padding: 0,50,0,10
    spacing: 10
    Label:
        text: 'Qt'
        size_hint_y: .1
        #height: 10
        font_size: 20
    TextInput:
        multiline: False
        disabled: not(root.selected)
        text: "%s"%root.init_qt
        id: qt
        font_size: 36
        size_hint_y: None
        height: 50
        on_text: root.parent.qt = int(self.text); app.compute_stats(None)


<HiddenRemoveButton@ButtonBehavior+Image>:
    #source: 'img/Delete_icon.png'
    text: 'Remove'
    size_hint: None, None
    width: 0

<RVImage@ToggleButtonBehavior+Image>:
    source: 'img/recto.png' if self.state =='normal' else 'img/verso.png'
    size_hint: None, None
    size: 100, 100

<StackPart>:
    source: ""
    height: 150
    spacing: 20
    padding: 20
    size_hint_y: None
    qt: 1
    verso: 'normal'
    dual: self.verso!='normal'
    on_dual: self.verso = 'normal' if not self.dual else 'down'
    canvas.after:
        Color:
            rgba: (0.3,0.3,1,.8) if self.selected else (0,0,0,0)
        Line:
            rounded_rectangle: self.x, self.y, self.width, self.height, 25
            width: 3
    Label:
        font_size: 48
        text: "#%s."%root.row
        size_hint_x: None
        width: 50
    BoxLayout:
        orientation: 'vertical'
        Image:
            source: root.source
            size: root.height, root.height
            id: img
        Label:
            text: split(root.name)[-1] if len(split(root.name)[-1])<15 else split(root.name)[-1][:5]+'[...]'+root.name[-5:]
            size_hint_y: .1
            font_size: img.height/10
    DynamicQuantity:
        id: qt
        selected: root.selected
        init_qt: root.qt
    RVImage:
        id: dual
        state: root.verso
        on_state: root.verso = self.state ;  app.compute_stats(None)

<FileItemOption@BoxLayout>
    size_hint_y:  .05
    #height: 30
    width: self.parent.width if self.parent else 100
    on_parent: self.pos = (self.parent.x, self.parent.y+20) if self.parent else (0,0)
    Label:
        text: "1"
        font_size: max(root.width/10, 10)
        size_hint_x: .15
        id: qt
        halign: 'right'
        valign: 'middle'
        text_size: self.size
    BoxLayout:
        size_hint_x: .1
        orientation: 'vertical'
        StickyButton:
            text: "^"
            background_color: 1,1,1,.5
            #size_hint: None, None
            #size: 15,17
            on_press: qt.text = str(int(qt.text)+1)
        StickyButton:
            text: "v"
            background_color: 1,1,1,.5
            #size_hint: None, None
            #size: 15,17
            on_press: qt.text = str(max(int(qt.text)-1,0))
    RVImage:
        #text: 'Dual'
        id: dual
        size_hint: .33, 1
    Button:
        id: edit_button
        size_hint: .25 if root.parent and root.parent.name.endswith('.kv') else None , 1
        width: 0 #will only apply if it is a template otherwise size hint will prevail
        on_press: app.set_screen('Designer'); app.root.ids['designer'].load("@%s"%root.parent.name)
        background_color: 0,0,0,0
        Image:
            source: 'img/edit.png'
            pos: self.parent.pos
            size: self.parent.size
            allow_stretch: True
    Button:
        id: apply_button
        size_hint: .25 if root.parent and root.parent.name.endswith('.kv') else None , 1
        width: 0 #will only apply if it is a template otherwise size hint will prevail
        on_press: root.parent.apply_item(root.parent.name)
        background_color: 0,0,0,0
        Image:
            source: 'img/apply.png'
            pos: self.parent.pos
            size: self.parent.size
            allow_stretch: True
    Button:
        size_hint: .33 , 1
        on_press: root.parent.add_item(qt.text, dual.state)
        background_color: 0,0,0,0
        Image:
            source: 'img/additem.png'
            pos: self.parent.pos
            size: self.parent.size
            allow_stretch: True


<FileViewItem>:
    orientation: 'vertical'
    group: 'fileitem'
    size_hint: None, 1
    width: self.height
    spacing: 10
    canvas.before:
        Color:
            rgba: (0,0,1,1) if self.state == 'down' else (1,1,1,0)
        Line:
            rectangle: self.x-3, self.y-3, self.width+6, self.height+6
            width: 3
        Color:
            rgba: (0,0,1,.31) if self.state == 'down' else (1,1,1,0)

        Rectangle:
            size: (self.width+10, self.height+30)
            pos: self.x-5, self.y-20
    Image:
        id: img
        allow_stretch: True
        source: root.source
        size_hint_y: .9
    Label:
        size_hint: 1, .1
        font_size:  max(root.width/10, 10)
        text_size: self.size
        halign: "center"
        text:  split(root.name)[-1] if len(split(root.name)[-1])<15 else split(root.name)[-1][:5]+'[...]'+root.name[-5:]

<PictureGrid@GridLayout>:
    rows: 1
    padding: 10
    spacing: 10
    size_hint: None, 1
    on_minimum_width: self.width = self.minimum_width

<TemplateEditTree>:
    hide_root: True
    on_selected_node: if hasattr(self.selected_node,'template'): root.update_tmpl(self.selected_node.template)

<TemplateEditPopup>:
    name: ""
    title: 'Edition of %s'%split(self.name)[-1]
    size_hintt: .8,.8
    GridLayout:
        cols:2
        ScrollView:
            size_hint_x: .33
            TemplateEditTree:
                id: options
                target: preview
        BoxLayout:
            size_hint_x: .67
            orientation: 'vertical'
            RelativeLayout:
                id: FL
                canvas.before:
                    Color:
                        rgb:.7,.7,.7
                    Line:
                        rectangle: 0,0, self.width, self.height
                        width: 3
                Scatter:
                    id: preview
                    do_rotation: False
                    #center_x: root.center_x
                    #pos_hint: {'center_x':.5, 'center_y':.5}
            BoxLayout:
                size_hint_y: None
                orientation: "horizontal"
                height: 30
                Button:
                    text: "Apply"
                    on_press: root.dismiss(); root.compute()
                Button:
                    text: "Cancel"
                    on_press: root.dismiss()

<BGDeckMaker>:
    #The Left tab with files/templates & values
    file_chooser: file_chooser
    TabbedPanel:
        folded: False
        do_default_tab: False
        tab_pos: 'top_left'
        size_hint_x: None
        width: 240 if not self.folded else 40
        id: explorer
        FloatLayout:
            ScrollView:
                id: tab1_content
                #FileChooserListView:
                FolderTreeView:
                    root_options: {'text': 'Game Library'}
                    size_hint_y: None
                    on_minimum_height: self.height = self.minimum_height
                    id: file_chooser
                    rootpath: GAMEPATH
                    filters: ['.jpg','.jpeg', '.png','.gif', '.kv']
                    on_selected_node: root.load_folder(args[1].path if hasattr(args[1],'path') else "")
            GridLayout:
                id: tab2_content
                cols: 1
                Accordion:
                    orientation: 'vertical'
                    min_size: 10
                    AccordionItem:
                        collapse: False
                        title: "File"
                        GridLayout:
                            rows: 1
                            #spacing: 10
                            Icon:
                                text: 'New'
                                source: 'img/new.png'
                                on_press: root.empty_stack()
                            Icon:
                                text: 'PDF'
                                source: 'img/print.png'
                                on_press: root.prepare_print()
                            Icon:
                                text: 'Import'
                                on_press: root.choose_file_popup("Choose CSV file to import", root.load_file)
                                source: 'img/import.png'
                            Icon:
                                text: 'Export'
                                source: 'img/export.png'
                                on_press: root.export_file()
                    AccordionItem:
                        title: "Fit Format"
                        GridLayout:
                            cols: 2
                            row_force_default: True
                            row_default_height: 30
                            Label:
                                text: 'Current'
                            Label:
                                text: "Fit Format"
                            Label:
                                text: "Card Width:"
                            TextInput:
                                id: cw
                                text: str((CARD.width)) if unit.text == 'px' else "%.2f"%(CARD.width/cm(1))
                                on_text: CARD.updateW(self.text, unit.text)
                            Label:
                                text: "Card Height:"
                            TextInput:
                                id: ch
                                text: str((CARD.height)) if unit.text == 'px' else "%.2f"%(CARD.height/cm(1))
                                on_text: CARD.updateH(self.text, unit.text)
                            Label:
                                text: "Unit:"
                            Spinner:
                                id: unit
                                values: ['cm','px']
                                text: 'cm'
                            Label:
                                text: "Keep Ratio:"
                            CheckBox:
                                ratio: 1
                                active: True
                                id: keep_ratio
                                on_active: CARD.keep_ratio = self.active
                            Label:
                                text: "Force Fit Format:"
                            CheckBox:
                                ratio: 1
                                active: False
                                id: force_format
                    AccordionItem:
                        title: 'Templates'
                        Button:
                            text: 'Load Templates Library'
                            on_press: root.load_template_lib()
                    AccordionItem:
                        title: "Scripts"
                        GridLayout:
                            cols: 1
                            #WatchedFolderTree:
                            #    root_options: {'text': 'Script Folders'}
                            #Splitter:
                            #    sizable_from: 'top'
                            ScriptTree:
                                root_options: {'text': 'Script Library'}

        #FoldedTabbedPanelItem:
        TabbedPanelHeader:
            background_normal: 'img/folder_off.png'
            background_down: 'img/folder.png'
            panel: explorer
            content: tab1_content.__self__
            #text: "Files"
        TabbedPanelHeader:
            #text: 'Format'
            background_normal: 'img/misc_off.png'
            background_down: 'img/misc.png'
            content: tab2_content.__self__
    BoxLayout:
        orientation: 'vertical'
        Splitter:
            size_hint_y: None
            height: 250
            sizable_from: 'bottom'
            ScrollView:
                id: pg_scroll
                do_scroll_y: False
                canvas.before:
                    Color:
                        rgb: .7,.7,.7
                    Rectangle:
                        size: self.size
                        pos: self.pos
                PictureGrid:
                    id: pictures
        ScrollView:
            #size_hint_y: .3
            do_scroll_x: False
            GridLayout:
                cols: 1
                size_hint: 1, None
                on_minimum_height: self.height= self.minimum_height
                id: stack
                padding: 10
                on_children: root.compute_stats(self)
                last_selected: None
                #Progressbar when loading folder
                ProgressBar:
                    id: load_progress
                    size_hint_y: None
                    height: 30
        Label:
            id: stats
            size_hint_y: None
            height: 30
            font_size: 20
