#:import HoverBehavior utils.hoverable.HoverBehavior
#:import CARD conf.card_format
#:import RuledScatter designer.RuledScatter
#:import Field fields.BaseField
#:import FAIcon utils.font_awesome.FAIcon


<FieldTaskButton@ButtonBehavior+HoverBehavior+FAIcon>
    radius: 40
    size_hint_x: None
    width: 50
    canvas.before:
        Color:
            rgb: 1,1,1
        Ellipse:
            pos: self.center_x-self.radius/2, self.center_y-self.radius/2
            size: self.radius, self.radius
        Color:
            rgba: (0,0,1,1) if self.hovered and not(self.disabled) else (0,0,0,0)
        Line:
            circle: self.center_x, self.center_y, self.radius/2
            width: self.radius/20
    font_size: 25
    color: 0,0,0,1


<RuledScatter>:
    canvas.before:
        Color:
            rgb: 1,1,1
        Rectangle:
            size: self.size

<TreeFieldEntry>:
#Use on the right tree containing added field
    padding: 10,0,10,0
    size_hint_y: None
    height: 30
    orientation: 'horizontal'
#:import isfile os.path.isfile
    Image:
        source: "img/%s.png"%root.target.Type if root.target and isfile("img/%s.png"%root.target.Type) else "img/misc.png"
        size_hint: .25,1
    Label:
        text: (root.target.name or root.target.Type[:-5] if root.target and isinstance(root.target, Field)  else (root.target.Type if root.target and isinstance(root.target, Field) else ""))
        size_hint: .5,1
    Button:
        disabled: not(root.is_selected)
        size_hint: .1,1
        on_press: root.designer.duplicate_selection()
        FAIcon:
            font_size: 20
            color: 1,1,1,1
            icon: 'copy'
            pos: self.parent.pos
            size: self.parent.size
    Button:
        disabled: not(root.is_selected)
        size_hint: .1,1
        on_press: root.designer.remove_selection()
        FAIcon:
            font_size: 30
            icon: 'remove'
            pos: self.parent.pos
            size: self.parent.size

<FieldEntry@ButtonBehavior+HoverBehavior+BoxLayout>:
#Used in the left scrollview with all potential fields
    text: ""
    source: ""
    padding: 10,0,10,0
    size_hint_y: None
    height: 50
    orientation: 'horizontal'
    on_press: self.target.add_field(args[0]) if self.parent else None
    canvas.before:
        Color:
            rgba: (.3,.3,1, .5) if self.hovered else (0,0,0,0)
        Rectangle:
            pos: self.pos
            size: self.size
    Image:
        source: root.source if root.source else "img/%s.png"%root.text if root.text else "img/misc.png"
        size_hint: .25,1
    Label:
        text: root.text[:-5] if root.text.endswith('Field') else root.text
        size_hint: .75,1
        shorten: True

<TmplFieldEntry@ButtonBehavior+HoverBehavior+BoxLayout>:
    source: ""
    padding: 10,0,10,0
    size_hint_y: None
    height: 50
    orientation: 'horizontal'
    on_press: self.target.add_template() if self.parent else None
    text:"Template"
    canvas.before:
        Color:
            rgba: (.3,.3,1, .5) if self.hovered else (0,0,0,0)
        Rectangle:
            pos: self.pos
            size: self.size
    Image:
        source: "img/TemplateField.png"
        size_hint: .25,1
    Label:
        text: root.text[:-5] if root.text.endswith('Field') else root.text
        size_hint: .75,1
        shorten: True

<LinkedFieldEntry@ButtonBehavior+HoverBehavior+BoxLayout>:
    source: ""
    padding: 10,0,10,0
    size_hint_y: None
    height: 50
    orientation: 'horizontal'
    on_press: self.target.add_parent_field(args[0]) if self.parent else None
    text:"Template"
    canvas.before:
        Color:
            rgba: (.3,.3,1, .5) if self.hovered else (0,0,0,0)
        Rectangle:
            pos: self.pos
            size: self.size
    Image:
        source: root.source if root.source else "img/%s.png"%root.text if root.text else "img/misc.png"
        size_hint: .25,1
    Label:
        text: root.text[:-5] if root.text.endswith('Field') else root.text
        size_hint: .75,1
        shorten: True



<ImageSpinnerOption@SpinnerOption>:
    size_hint_x: None
    halign: 'right'
    valign: 'middle'
    text_size: .9*root.width, root.height#root.size
    font_size: '14dp'
    width: 80
    FAIcon:
        icon: root.text if root.text else ""
        size: root.size[0]/2,root.size[1]/2
        pos: root.x-root.width/16,root.y+root.height/4
        font_size: 30

<ImageSpinner@Spinner>:
    option_cls: "ImageSpinnerOption"
    size_hint_x: None
    width: 80
    background_color: 0,.2,1,.6

<WrappedLabel@ScrollView>:
    text: ""
    Label:
        text_size: self.size
        valign: 'top'
        text: root.text

<BGDesigner>:
    BoxLayout:
        orientation: "horizontal"
        Splitter:
            size_hint: .4,1
            sizable_from: 'right'
            max_size: 0.6*root.width
            TabbedPanel:
                do_default_tab: False
                TabbedPanelItem:
                    text: 'Template'
                    Accordion:
                        orientation: 'vertical'
                        AccordionItem:
                            collapse: False
                            title: 'Fields'
                            GridLayout:
                                #size_hint_y: None
                                cols: 1
                                ScrollView:
                                    FieldTreeView:
                                        designer: root
                                        indent_level: 0
                                        #hide_root: True
                                        size_hint_y: None
                                        #size_hint_x: None
                                        width: self.parent.width if self.parent else 200
                                        on_minimum_height: self.height = self.minimum_height
                                        on_minimum_width: self.width= self.minimum_width
                                        id: fields
                                        root_options: {'text': 'Fields' if not root.current_template else root.current_template.template_name}
                                        canvas.before:
                                            Color:
                                                rgb: .2,.2,.2
                                            Rectangle:
                                                size: self.size
                                                pos: self.pos
                                Splitter:
                                    sizable_from: 'top'
                                    ScrollView:
                                        TreeView:
                                            on_minimum_height: self.height= self.minimum_height
                                            id: params
                                            current_field: None
                                            size_hint_y:  None
                                            #hide_root: bool(root.selection)
                        AccordionItem:
                            title: 'File'
                            GridLayout:
                                #size_hint_y: None
                                cols: 1
                                spacing: 10
                                BoxLayout:
                                    orientation: "horizontal"
                                    size_hint_y: None
                                    height: 30
                                    id: bl_name
                                    Label:
                                        text: "Name: "
                                        size_hint_x: None
                                        width: 50
                                    TextInput:
                                        id: tmplName
                                        size_hint_x: None
                                        width: bl_name.width-50-10
                                        text: root.current_template.template_name
                                        on_text: if root.current_template: root.current_template.template_name = tmplName.text
                                Icon:
                                    icon: "file"
                                    on_press: root.new()
                                    text: 'New'
                                Icon:
                                    text: "Tmpl Preview"
                                    icon: 'print'
                                    #:import F kivy.factory.Factory
                                    on_press: C = F.WrappedLabel(size=(.8*root.width,.8*root.height)) ; C.text=root.export_kv().replace('\t','  ').replace('\r\n','\n'); F.Popup(title='Template Text Preview', size_hint=(None,None), width=.9*root.width, height=.9*root.height, pos=(.1*root.width,.1*root.height), content=C).open()
                                Icon:
                                    icon: 'save'
                                    on_press: root.save()
                                    text: 'Save'
#                                Icon:
#                                    height: 40
#                                    #source: 'img/filesaveas2.png'
#                                    icon: 'save'
#                                    on_press: root.save(root.current_template.template_name)
#                                    text: 'Save As'
                TabbedPanelItem:
                    text: 'Library'
                    GridLayout:
                        #size_hint_y: None
                        cols: 1
                        #Field Grid
                        Accordion:
                            id: left_accordion
                            #size_hint: .2,1
                            canvas.before:
                                Color:
                                    rgb: .6,.6,.6,
                                Rectangle:
                                    size: self.size
                                    pos: self.pos
                            orientation: 'vertical'
                            AccordionItem:
                                title: 'Fields'
                                collapse: False
                                ScrollView:
                                    GridLayout:
                                        cols: 1
                                        id: fields_stack
                                        size_hint_y: None
                                        on_minimum_height: self.height = self.minimum_height
                            AccordionItem:
                                title: "Shapes"
                                ScrollView:
                                    GridLayout:
                                        cols: 1
                                        id: shapes_stack
                                        on_minimum_height: self.height = self.minimum_height
                                        size_hint_y: None

                            AccordionItem:
                                title: "Linked"
                                ScrollView:
                                    GridLayout:
                                        cols: 1
                                        id: effects_stack
                                        size_hint_y: None
                                        on_minimum_height: self.height = self.minimum_height

        #Center layout, with template
        FloatLayout
            size_hint: .65,1
            id: background
            canvas.before:
                Color:
                    rgb: 1,1,1
                Rectangle:
                    size: self.size
                    pos: self.pos

            #Top control scroll, activated when a selection is made
            ScrollView:
                pos: background.x, background.top - self.height
                size_hint: None, None
                height: 50
                width: background.width
                canvas.before:
                    Color:
                        rgba: (0,0,1,.6) if root.selection else (0,0,0,0)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                GridLayout:
                    rows: 1
                    on_minimum_width: self.width= self.minimum_width
                    id: tasks
                    size_hint_x:  None
                    #col_default_width: 60
            StencilView:
                pos: background.x,0
                size_hint_y: None
                height: background.height - 50
                RuledScatter:
                    id: content
                    do_rotation: False
                    do_scale: False
                    pos: background.x+50,100
                    size_hint: None, None
                    size: root.current_template.size
                    bgcol: .7,.7,.7,.7
                    canvas.before:
                        Color:
                            rgba: self.bgcol
                        Rectangle:
                            size: self.size
            #Option bar with zoom
            BoxLayout:
                size_hint_y: None
                height: 45
                x: background.x
                canvas.before:
                    Color:
                        rgb: .7,.7,.7
                    Rectangle:
                        size: self.size
                        pos: self.pos
                Label:
                    text: "Zoom:"
                    padding_x: 150
                    size_hint_x: None
                    #width: 60
                Slider:
                    range:0.01,4
                    value: 1
                    size_hint_x: .8
                    on_value: content.scale = self.value; content.pos= background.x+50,100
                    orientation: 'horizontal'
                    canvas.before:
                        Color:
                            rgba: .2,.2,.2,.2
                        Rectangle:
                            pos: self.pos
                            size: self.size
                Label:
                    text: "Show Surface:"
                    size_hint_x: None
                    width: 120
                CheckBox:
                    on_active: content.bgcol = (.7,.7,.7,.7) if self.active else (1,1,1,1)
                    active: True
                    size_hint_x: None
                    width: 30

<TmplChoicePopup>:
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "Choose Template to Include"
            size_hint_y: None
            height: 30
        ScrollView:
            GridLayout:
                size_hint_y: None
                height: root.height - 70
                on_minimum_height: self.height = self.minimum_height
                cols: 3
                id: tmpl_list
        BoxLayout:
            size_hint_y: None
            height: 40
            #Button:
            #    text: "Apply"
            #    on_press: root.dismiss() ; root.cb()
            Button:
                text: "Cancel"
                on_press: root.dismiss()