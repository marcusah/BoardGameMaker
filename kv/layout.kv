#:import LayoutPlaceHolder layout.LayoutPlaceHolder
#:import LayoutEditor layout.LayoutEditor
#:import CARD conf.card_format

<SelectableScreenshoot@ToggleButtonBehavior+Image>:
    size_hint:(None, None)
    size: (200,200)
    group: 'screenshot'
    pos_hint:{'center_x':.5}
    canvas.before:
        Color:
            rgb: (0,0,0) if self.state=='normal' else (.7,.7,.7)
        Rectangle:
            pos: self.pos
            size: self.size
    on_press: if args[0].last_touch.is_double_tap: self.lph.add_img_ph(self)

<Page@ScatterLayout>:
    id: page
    index: 0
    scale: .35
    do_rotation: False
    pos: 250,120
    size_hint: None, None
    canvas.before:
        Color:
            rgb: 1,1,1
        Rectangle:
            size: self.size
    size: cm(21), cm(29.7)

<LayoutEditor>
    size_hint: None, None
    size: 400,250
    GridLayout:
        cols:2
        row_force_default: True
        row_default_height: 30
        Label:
            text:"Width(cm):"
        TextInput:
            id: phw
            text: "%.2f"%(root.target.scale *root.target.width/cm(1))
            #on_text: root.update_selected_ph()
        Label:
            text:"Height(cm):"
        TextInput:
            id: phh
            text: "%.2f"%(root.target.scale *root.target.height/cm(1))
            #on_text: root.update_selected_ph()
        Label:
            text:"X(cm):"
        TextInput:
            id: phx
            text: "%.2f"%(root.target.scale *root.target.x/cm(1))
            #on_text: root.update_selected_ph()
        Label:
            text:"Y(cm):"
        TextInput:
            id: phy
            text: "%.2f"%(root.target.scale *root.target.y/cm(1))
            #on_text: root.update_selected_ph()
        Label:
            text:"Rotation(Â°):"
        TextInput:
            id: phr
            text: "%d"%(root.target.rotation)
            #on_text: root.update_selected_ph()
        Button:
            text: "Apply"
            on_press: root.dismiss(); root.layout_maker.update_selected_ph(phw.text, phh.text, phx.text, phy.text, phr.text)
        Button:
            text: "Cancel"
            on_press: root.dismiss()

<LayoutPlaceHolder>:
    do_rotation: True
    size_hint: None, None
    canvas.before:
        Color:
            rgba: (0,0,1,.8) if self.selected else (0,0,1,.3)
        Rectangle:
            size: self.size
    canvas.after:
        Color:
            rgb: 0,0,0
        Line:
            rectangle: self.x, self.y, self.width, self.height
            dash_offset: 3
            dash_length: 3
    Label:
        id: details
        text: "#%d\n\n%.2f cm x %.2f cm\n\nX: %.2fcm \n Right: %.2fcm \nY: %.2fcm \n Top: %.2fcm\n"%(root.index,root.scale *root.width/cm(1), root.scale*root.height/cm(1), root.x/cm(1), root.right/cm(1) ,root.y/cm(1), root.top/cm(1))
        halign: "center"
        size_hint: None, None
        width: root.width
        font_size: 24
        y: 100



<BGLayoutMaker>:
    Accordion:
        size_hint_x: None
        width: 200
        orientation: 'vertical'
        AccordionItem:
            title: "PlaceHolder"
            collapse: False
            GridLayout:
                size_hint_x: .3
                row_default_height: 30
                cols: 1
                Button:
                    text: 'Reset View'
                    on_press: page.rotation=0 ; page.scale=1; page.pos = (100,100)
                Button:
                    text: 'Add PlaceHolder'
                    on_press:  root.add_ph()
                Button:
                    text: 'Rotate PH '
                    on_press:  root.rotate_ph()
                Button:
                    text: 'Export'
                    on_press:  root.export_phs()
                Button:
                    text: 'Edit PH'
                    on_press:  root.edit_ph()
                Button:
                    text: 'Add Page'
                    on_press:  root.add_page()
                Button:
                    text: 'Remove Page'
                    on_press:  root.remove_page()
                Button:
                    text: 'Add Mirror Page'
                    on_press:  root.add_mirror_page()
                Button:
                    text: 'Clear Current Page'
                    on_press:  root.clear_page()
        AccordionItem:
            title: "Images"
            ScrollView:
                GridLayout:
                    size_hint_y: None
                    on_minimum_height: self.height = self.minimum_height
                    cols: 1
                    id: pictures
                    spacing: 10

    Label:
        text: 'Size on Display: %.2f cm x %.2f cm'%(21.0*page.scale, 29.7*page.scale)
        size: 400,30
        pos: 200, 0
        size_hint: None, None
    Spinner:
        id: page_index
        pos: 200, 30
        size: 400, 30
        size_hint: None, None
        text: "Page 1"
        values: ['Page %d'%(i+1) for i in range(len(root.pages))]
        on_text: root.set_page(args[1])
    Label:
        text: "#%d\n\n%.2f cm x %.2f cm\n\nX: %.2fcm / Right: %.2fcm \nY: %.2fcm / Top: %.2fcm\n"%(root.selected_ph.index,root.selected_ph.scale *root.selected_ph.width/cm(1), root.selected_ph.scale*root.selected_ph.height/cm(1), root.selected_ph.x/cm(1), root.selected_ph.right/cm(1) ,root.selected_ph.y/cm(1), root.selected_ph.top/cm(1)) if root.selected_ph else ""
        multiline: True
        size: 200,300
        x: root.width -self.width
        y: 300
        size_hint: None, None
    Page:
        id: page