# Board Game Maker

License: LGPL
FontIcon made with Fontello
Software requirement:
- Kivy 1.9 (kivy.org) Kivy 1.9 minimum,
- Reportlab (pip installable in kivy environnement)
- Pillow (pip installable in kivy environnement)
- openpyxl & xlr for XLSX read/write


## Screenshots

![Main Screen](https://raw.githubusercontent.com/opqopq/BoardGameMaker/master/img/main_screen.png)

Prior to launch, edit file bgm.ini and change the gamepath folder to an existing folder containings your pictures & projects.
If you don't, the software will ask you to do so & to restart it.

##Some Context
------------

I've been building a card/tiles making software for some time now. Before releasing it, I'd like to see whether there is a need for it and what kind of features it should have.

So far, the program I have made (python langage based) have the following features:
1) create ready to print Card/Tiles sheets, placing images on a sheet in order to ease dual printing of image

This feature is the most important one. It allows to simply create a deck of card or tiles from existing images, saving this deck in CSV/Excel format.
You can simply change their quantity and format them to the same size, creating dual printing pages if asked.

This is the "raison d'Ãªtre" of the software. At the time, I wanted to be able to easily print some card proxy for my Collectible Card Game sessions.

This feature is working, through PDF Export (only A4 format for now)

2) Add simple image transformation to your deck
Software comes with a bunch of template to transform your image before creating printing sheet.
Think what some inkscape scripts would do.
Some examples of implemented features:
- add a custom border to an image
- divide the image in several sub-ones (especially useful to split a board into several card-sized pictures)
- transforming an image to an origami-dice shaped one
- creating D6, D8 or D12, with custom face

.
This features workds and a template library is available.

3) Add some simple script to create & fill your deck
Think what nandeck would do here. Software can understand script in order to directly add card.
Some example of implemented script:
- duplicate an existing deck to add greyscale dual copy of each card
- split an image & create a stack made of each of its sub images

This features is super-alpha. There will be lots of changes as the simplify the way scripts are working.

4) Creating your own High Level Template
Once you have mastered the basic usages, you can launch the template designer, which is a WYSIWIG interface to create template, like the one existing in Magic Set Editor software.
Contrary to magic set software, template are created from the GUI.
With such template, you can create a simple excel/CSV file holding the data from your deck. The software will create the image for you.
Think cardmaker software, here.


This feature cames with me playing with the Magic Set Editor Software.
I wanted to do the same things, without being obliged to re-learn the text-based template system.

This feature heavily rely on the KIVY (kivy.org) templating language.
As a bonus, it means we have a fully scriptable templating language to define template.

This features is in beta state. The templating languge works, and the designer above spits its results as templating language.
Nevertheless, tons of documentation is missing.

5) Even more power users features

Template languages comes with somes additionals features (like style) that I still have to mature. I do not know if usage will be interesting.
--------------------------------------------------------------------

This is a lot to read. The program is ready, but in alpha quality.

Feedback are happily welcome !
